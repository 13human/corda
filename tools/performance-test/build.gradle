apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'net.corda.plugins.quasar-utils'
apply plugin: 'net.corda.plugins.publish-utils'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'maven-publish'

group 'net.corda'
version '0.7-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.0.6'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        url 'https://dl.bintray.com/kotlin/exposed'
    }
}
ext {
    deployTo = "./build/nodes"
}

sourceSets {
    main {
        resources {
            srcDir "../../config/dev"
        }
    }
    test {
        resources {
            srcDir "../../config/test"
        }
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testCompile "junit:junit:$junit_version"

    // Corda integration dependencies
    runtime project(path: ":node:capsule", configuration: 'runtimeArtifacts')
    compile project(':core')
    compile project(':client')
    compile project(':node')
    compile project(':test-utils')

    // Javax is required for webapis
    compile "org.glassfish.jersey.core:jersey-server:${jersey_version}"
}

idea {
    module {
        downloadJavadoc = true // defaults to false
        downloadSources = true
    }
}


task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['build']) {
    ext.rpcUsers = [['user': "demo", 'password': "demo", 'permissions': [
            "StartFlow.net.corda.flows.TestIssueAndMove"
    ]]]
    directory deployTo
    networkMap "Notary"
    node {
        name "Notary"
        nearestCity "London"
        advertisedServices = ["corda.notary.validating"]
        artemisPort 10002
        webPort 10009
        cordapps = []
        notaryNodePort 11002
    }
    node {
        name "Party"
        nearestCity "London"
        advertisedServices = []
        artemisPort 10008
        webPort 10003
        cordapps = []
        rpcUsers = ext.rpcUsers
    }
}

task run(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'net.corda.perf.PerformanceTestKt'
}

